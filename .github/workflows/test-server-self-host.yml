name: Self-hosted Server Test Suite

on:
  pull_request:
    branches:
      - main
      - nsc/v2

jobs:
  test:
    name: Run tests
    strategy:
      matrix:
        ai: ["openai", "no-ai"]
        search: ["searxng", "google"]
        engine: ["playwright", "fetch"]
        # proxy: ["proxy", "no-proxy"]
        proxy: ["proxy"]
      fail-fast: false
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Start minikube
        uses: medyagh/setup-minikube@latest
      - name: Build images using minikube's docker
        run: |
          eval $(minikube docker-env)
          docker build -t firecrawl/firecrawl:latest ./apps/api
          docker build -t firecrawl/nuq-postgres:latest -f .github/k8s/nuq-postgres/Dockerfile .
      - name: Build Playwright image
        if: matrix.engine == 'playwright'
        run: |
          eval $(minikube docker-env)
          docker build -t firecrawl/playwright-service:latest ./apps/playwright-service-ts
      # TODO: Build SearXNG image
      - name: Create configmap
        run: |
          kubectl create configmap firecrawl-config-dynamic -n default \
            --from-literal=OPENAI_API_KEY=${{ matrix.ai == 'openai' && secrets.OPENAI_API_KEY || '' }} \
            --from-literal=SEARXNG_ENDPOINT=${{ matrix.search == 'searxng' && 'http://firecrawl-searxng:8080/search' || '' }} \
            --from-literal=PLAYWRIGHT_MICROSERVICE_URL=${{ matrix.engine == 'playwright' && 'http://firecrawl-playwright-service:3003/scrape' || '' }} \
            --from-literal=PROXY_SERVER=${{ matrix.proxy == 'proxy' && secrets.PROXY_SERVER || '' }} \
            --from-literal=PROXY_USERNAME=${{ matrix.proxy == 'proxy' && secrets.PROXY_USERNAME || '' }} \
            --from-literal=PROXY_PASSWORD=${{ matrix.proxy == 'proxy' && secrets.PROXY_PASSWORD || '' }}
      - name: Deploy server
        run: kubectl apply -f .github/k8s/server.yml
      - name: Deploy playwright
        if: matrix.engine == 'playwright'
        run: kubectl apply -f .github/k8s/playwright.yml
      - name: Deploy searxng
        if: matrix.search == 'searxng'
        run: kubectl apply -f .github/k8s/searxng.yml
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: './apps/api/pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
        working-directory: ./apps/api
      - name: Wait for server
        run: kubectl wait --for=condition=ready pod -l app=firecrawl-app --timeout=60s
      - name: Wait for playwright
        if: matrix.engine == 'playwright'
        run: kubectl wait --for=condition=ready pod -l app=firecrawl-playwright-service --timeout=60s
      - name: Wait for searxng
        if: matrix.search == 'searxng'
        run: kubectl wait --for=condition=ready pod -l app=firecrawl-searxng --timeout=60s
      - name: Run snippet tests
        env:
          TEST_SUITE_SELF_HOSTED: true
          OPENAI_API_KEY: ${{ matrix.ai == 'openai' && '<IS SET>' || '' }}
          PROXY_SERVER: ${{ matrix.proxy == 'proxy' && secrets.PROXY_SERVER || '' }}
          PLAYWRIGHT_MICROSERVICE_URL: ${{ matrix.engine == 'playwright' && '<IS SET>' || '' }}
        run: TEST_API_URL=$(minikube service firecrawl-app --url) pnpm run test:snips
        working-directory: ./apps/api
      - name: Create logs directory
        if: always()
        run: mkdir -p logs
      - name: Copy log files
        if: always()
        run: |
          kubectl logs deployment/firecrawl-app > logs/api.log || true
          kubectl logs deployment/firecrawl-worker > logs/worker.log || true
          kubectl logs deployment/firecrawl-nuq-worker > logs/nuq-worker.log || true
          kubectl logs deployment/firecrawl-dragonfly > logs/dragonfly.log || true
          kubectl logs deployment/nuq-postgres > logs/postgres.log || true
      - name: Copy SearXNG logs
        if: always() && matrix.search == 'searxng'
        run: kubectl logs deployment/firecrawl-searxng > logs/searxng.log || true
      - name: Copy Playwright logs
        if: always() && matrix.engine == 'playwright'
        run: kubectl logs deployment/firecrawl-playwright-service > logs/playwright.log || true
      - name: Zip logs
        if: always()
        run: |
          cd logs
          zip -r logs.zip ./*
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Logs (${{ matrix.ai }}, ${{ matrix.search }}, ${{ matrix.engine }}, ${{ matrix.proxy }})
          path: logs/logs.zip
